/* Auto-generated by genmsg_cpp for file /home/bardo91/programing/ROS-CATEC/CATEC_dataTypes/catec_actions_msgs/msg/GoToWayPointsResult.msg */
#ifndef CATEC_ACTIONS_MSGS_MESSAGE_GOTOWAYPOINTSRESULT_H
#define CATEC_ACTIONS_MSGS_MESSAGE_GOTOWAYPOINTSRESULT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "catec_msgs/PositionWithCheckStamped.h"

namespace catec_actions_msgs
{
template <class ContainerAllocator>
struct GoToWayPointsResult_ {
  typedef GoToWayPointsResult_<ContainerAllocator> Type;

  GoToWayPointsResult_()
  : final_position()
  {
  }

  GoToWayPointsResult_(const ContainerAllocator& _alloc)
  : final_position(_alloc)
  {
  }

  typedef  ::catec_msgs::PositionWithCheckStamped_<ContainerAllocator>  _final_position_type;
   ::catec_msgs::PositionWithCheckStamped_<ContainerAllocator>  final_position;


  typedef boost::shared_ptr< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator>  const> ConstPtr;
}; // struct GoToWayPointsResult
typedef  ::catec_actions_msgs::GoToWayPointsResult_<std::allocator<void> > GoToWayPointsResult;

typedef boost::shared_ptr< ::catec_actions_msgs::GoToWayPointsResult> GoToWayPointsResultPtr;
typedef boost::shared_ptr< ::catec_actions_msgs::GoToWayPointsResult const> GoToWayPointsResultConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace catec_actions_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ff6341b1ea48ec4091a1b3f7672094cc";
  }

  static const char* value(const  ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xff6341b1ea48ec40ULL;
  static const uint64_t static_value2 = 0x91a1b3f7672094ccULL;
};

template<class ContainerAllocator>
struct DataType< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "catec_actions_msgs/GoToWayPointsResult";
  }

  static const char* value(const  ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
#reult definition\n\
catec_msgs/PositionWithCheckStamped final_position\n\
\n\
================================================================================\n\
MSG: catec_msgs/PositionWithCheckStamped\n\
Header header\n\
PositionWithCheck position\n\
================================================================================\n\
MSG: std_msgs/Header\n\
# Standard metadata for higher-level stamped data types.\n\
# This is generally used to communicate timestamped data \n\
# in a particular coordinate frame.\n\
# \n\
# sequence ID: consecutively increasing ID \n\
uint32 seq\n\
#Two-integer timestamp that is expressed as:\n\
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n\
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n\
# time-handling sugar is provided by the client library\n\
time stamp\n\
#Frame this data is associated with\n\
# 0: no frame\n\
# 1: global frame\n\
string frame_id\n\
\n\
================================================================================\n\
MSG: catec_msgs/PositionWithCheck\n\
float64 x\n\
float64 y\n\
float64 z\n\
uint8 valid\n\
";
  }

  static const char* value(const  ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.final_position);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GoToWayPointsResult_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::catec_actions_msgs::GoToWayPointsResult_<ContainerAllocator> & v) 
  {
    s << indent << "final_position: ";
s << std::endl;
    Printer< ::catec_msgs::PositionWithCheckStamped_<ContainerAllocator> >::stream(s, indent + "  ", v.final_position);
  }
};


} // namespace message_operations
} // namespace ros

#endif // CATEC_ACTIONS_MSGS_MESSAGE_GOTOWAYPOINTSRESULT_H

