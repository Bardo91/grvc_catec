/* Auto-generated by genmsg_cpp for file /home/bardo91/programing/ROS-CATEC/CATEC_dataTypes/catec_actions_msgs/msg/DownloadDataResult.msg */
#ifndef CATEC_ACTIONS_MSGS_MESSAGE_DOWNLOADDATARESULT_H
#define CATEC_ACTIONS_MSGS_MESSAGE_DOWNLOADDATARESULT_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace catec_actions_msgs
{
template <class ContainerAllocator>
struct DownloadDataResult_ {
  typedef DownloadDataResult_<ContainerAllocator> Type;

  DownloadDataResult_()
  : total_images_sent(0)
  , total_bytes_sent(0)
  , remaining_images(0)
  , remaining_bytes(0)
  {
  }

  DownloadDataResult_(const ContainerAllocator& _alloc)
  : total_images_sent(0)
  , total_bytes_sent(0)
  , remaining_images(0)
  , remaining_bytes(0)
  {
  }

  typedef uint8_t _total_images_sent_type;
  uint8_t total_images_sent;

  typedef uint32_t _total_bytes_sent_type;
  uint32_t total_bytes_sent;

  typedef uint8_t _remaining_images_type;
  uint8_t remaining_images;

  typedef uint32_t _remaining_bytes_type;
  uint32_t remaining_bytes;


  typedef boost::shared_ptr< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator>  const> ConstPtr;
}; // struct DownloadDataResult
typedef  ::catec_actions_msgs::DownloadDataResult_<std::allocator<void> > DownloadDataResult;

typedef boost::shared_ptr< ::catec_actions_msgs::DownloadDataResult> DownloadDataResultPtr;
typedef boost::shared_ptr< ::catec_actions_msgs::DownloadDataResult const> DownloadDataResultConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace catec_actions_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "f5b68189c823cc97128b89979bd1aea8";
  }

  static const char* value(const  ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xf5b68189c823cc97ULL;
  static const uint64_t static_value2 = 0x128b89979bd1aea8ULL;
};

template<class ContainerAllocator>
struct DataType< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "catec_actions_msgs/DownloadDataResult";
  }

  static const char* value(const  ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
#result definition\n\
uint8   total_images_sent\n\
uint32  total_bytes_sent\n\
uint8   remaining_images\n\
uint32  remaining_bytes\n\
\n\
";
  }

  static const char* value(const  ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.total_images_sent);
    stream.next(m.total_bytes_sent);
    stream.next(m.remaining_images);
    stream.next(m.remaining_bytes);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct DownloadDataResult_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::catec_actions_msgs::DownloadDataResult_<ContainerAllocator> & v) 
  {
    s << indent << "total_images_sent: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.total_images_sent);
    s << indent << "total_bytes_sent: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.total_bytes_sent);
    s << indent << "remaining_images: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.remaining_images);
    s << indent << "remaining_bytes: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.remaining_bytes);
  }
};


} // namespace message_operations
} // namespace ros

#endif // CATEC_ACTIONS_MSGS_MESSAGE_DOWNLOADDATARESULT_H

