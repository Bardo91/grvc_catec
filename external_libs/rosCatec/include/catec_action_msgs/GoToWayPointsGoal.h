/* Auto-generated by genmsg_cpp for file /home/bardo91/programing/ROS-CATEC/CATEC_dataTypes/catec_actions_msgs/msg/GoToWayPointsGoal.msg */
#ifndef CATEC_ACTIONS_MSGS_MESSAGE_GOTOWAYPOINTSGOAL_H
#define CATEC_ACTIONS_MSGS_MESSAGE_GOTOWAYPOINTSGOAL_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "catec_msgs/WayPointWithCruiseStamped.h"

namespace catec_actions_msgs
{
template <class ContainerAllocator>
struct GoToWayPointsGoal_ {
  typedef GoToWayPointsGoal_<ContainerAllocator> Type;

  GoToWayPointsGoal_()
  : way_points()
  , size(0)
  {
  }

  GoToWayPointsGoal_(const ContainerAllocator& _alloc)
  : way_points(_alloc)
  , size(0)
  {
  }

  typedef std::vector< ::catec_msgs::WayPointWithCruiseStamped_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::catec_msgs::WayPointWithCruiseStamped_<ContainerAllocator> >::other >  _way_points_type;
  std::vector< ::catec_msgs::WayPointWithCruiseStamped_<ContainerAllocator> , typename ContainerAllocator::template rebind< ::catec_msgs::WayPointWithCruiseStamped_<ContainerAllocator> >::other >  way_points;

  typedef uint32_t _size_type;
  uint32_t size;


  typedef boost::shared_ptr< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator>  const> ConstPtr;
}; // struct GoToWayPointsGoal
typedef  ::catec_actions_msgs::GoToWayPointsGoal_<std::allocator<void> > GoToWayPointsGoal;

typedef boost::shared_ptr< ::catec_actions_msgs::GoToWayPointsGoal> GoToWayPointsGoalPtr;
typedef boost::shared_ptr< ::catec_actions_msgs::GoToWayPointsGoal const> GoToWayPointsGoalConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace catec_actions_msgs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e95f53fa4d0604131f022990dac5737f";
  }

  static const char* value(const  ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe95f53fa4d060413ULL;
  static const uint64_t static_value2 = 0x1f022990dac5737fULL;
};

template<class ContainerAllocator>
struct DataType< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "catec_actions_msgs/GoToWayPointsGoal";
  }

  static const char* value(const  ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
#goal definition\n\
catec_msgs/WayPointWithCruiseStamped[] way_points\n\
uint32 size\n\
\n\
================================================================================\n\
MSG: catec_msgs/WayPointWithCruiseStamped\n\
Header header\n\
WayPointWithCruise way_point\n\
================================================================================\n\
MSG: std_msgs/Header\n\
# Standard metadata for higher-level stamped data types.\n\
# This is generally used to communicate timestamped data \n\
# in a particular coordinate frame.\n\
# \n\
# sequence ID: consecutively increasing ID \n\
uint32 seq\n\
#Two-integer timestamp that is expressed as:\n\
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n\
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n\
# time-handling sugar is provided by the client library\n\
time stamp\n\
#Frame this data is associated with\n\
# 0: no frame\n\
# 1: global frame\n\
string frame_id\n\
\n\
================================================================================\n\
MSG: catec_msgs/WayPointWithCruise\n\
float64 x\n\
float64 y\n\
float64 z\n\
float32 cruise\n\
float64 heading\n\
";
  }

  static const char* value(const  ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.way_points);
    stream.next(m.size);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GoToWayPointsGoal_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::catec_actions_msgs::GoToWayPointsGoal_<ContainerAllocator> & v) 
  {
    s << indent << "way_points[]" << std::endl;
    for (size_t i = 0; i < v.way_points.size(); ++i)
    {
      s << indent << "  way_points[" << i << "]: ";
      s << std::endl;
      s << indent;
      Printer< ::catec_msgs::WayPointWithCruiseStamped_<ContainerAllocator> >::stream(s, indent + "    ", v.way_points[i]);
    }
    s << indent << "size: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.size);
  }
};


} // namespace message_operations
} // namespace ros

#endif // CATEC_ACTIONS_MSGS_MESSAGE_GOTOWAYPOINTSGOAL_H

